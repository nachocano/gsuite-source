/*
Copyright 2019 The Knative Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/nachocano/gsuite-source/pkg/apis/sources/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SheetsSourceLister helps list SheetsSources.
type SheetsSourceLister interface {
	// List lists all SheetsSources in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.SheetsSource, err error)
	// SheetsSources returns an object that can list and get SheetsSources.
	SheetsSources(namespace string) SheetsSourceNamespaceLister
	SheetsSourceListerExpansion
}

// sheetsSourceLister implements the SheetsSourceLister interface.
type sheetsSourceLister struct {
	indexer cache.Indexer
}

// NewSheetsSourceLister returns a new SheetsSourceLister.
func NewSheetsSourceLister(indexer cache.Indexer) SheetsSourceLister {
	return &sheetsSourceLister{indexer: indexer}
}

// List lists all SheetsSources in the indexer.
func (s *sheetsSourceLister) List(selector labels.Selector) (ret []*v1alpha1.SheetsSource, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SheetsSource))
	})
	return ret, err
}

// SheetsSources returns an object that can list and get SheetsSources.
func (s *sheetsSourceLister) SheetsSources(namespace string) SheetsSourceNamespaceLister {
	return sheetsSourceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SheetsSourceNamespaceLister helps list and get SheetsSources.
type SheetsSourceNamespaceLister interface {
	// List lists all SheetsSources in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.SheetsSource, err error)
	// Get retrieves the SheetsSource from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.SheetsSource, error)
	SheetsSourceNamespaceListerExpansion
}

// sheetsSourceNamespaceLister implements the SheetsSourceNamespaceLister
// interface.
type sheetsSourceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SheetsSources in the indexer for a given namespace.
func (s sheetsSourceNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SheetsSource, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SheetsSource))
	})
	return ret, err
}

// Get retrieves the SheetsSource from the indexer for a given namespace and name.
func (s sheetsSourceNamespaceLister) Get(name string) (*v1alpha1.SheetsSource, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("sheetssource"), name)
	}
	return obj.(*v1alpha1.SheetsSource), nil
}
